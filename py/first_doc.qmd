---
title: "My First Quarto Document"
author: "Your Name Here"
date: "2025-09-29"
format: html
---

# Introduction

This is my very first Quarto document!\
It will generate a PDF when I render it.

```{python}
print("Hello world!")
```

# Python Example

Here’s a Python code block that prints `"Hello World!"`:

```{python}
hello_world = "Hello world!"
print(hello_world)
```

```{python}
my_age = 21
current_year = 2025
year_of_birth = current_year - my_age
my_age = 50
print (my_age)
```

```{python}
my_age = 21
current_year = 2025
year_of_birth = current_year - my_age
print(year_of_birth)

to_kid = 30 - my-age
my_age + to-kid + 18
```

```{python}
num_1 = 1
type(num_1)
num_2 = 1.5
type(num_2)
```

```{python}
100 + 37
4 * 80
100 / 25
2 ** 2 
2 ** 2 == 2 * 2
10 % 3
n = 17

if n % 2 == 0:
    print("even")
else:
    print("odd")
    
10 // 3   # 3  (3 goes into 10 three times, remainder dropped)
14 // 5   # 2  (5 goes into 14 two times, remainder dropped)

14 / 5      # 2.8 (normal division)
14 % 5      # 4   (modulus)
14 // 5     # 2   (floor division)
```

```{python}
100 / 9
100 % 9
100 // 9

365 // 7
365 % 7
```

```{python}
title = "Dr."
first_name = "Andrew"
last_name = "Byrd"
title + first_name + last_name
print(title, first_name, last_name)
```

```{python}
print("I said, \"Hello!\"")
```

```{python}
first_name
first_name == "Bob"
# exactly equal to

first_name != "Bob"
# not equal to
```

```{python}
word = 'pin'
starts_p = word[0] == 'p'
starts_t = word[0] == 't'
starts_k = word[0] == 'k'
aspirated = starts_p or starts_t or starts_k
print(word: 'is aspirated', aspirated)
```

```{python}
novels = ["Sense and Sensibility", "Pride and Prejudice", "Mansfield Park", "Emma", "Northanger Abbey", "Persuasion", "Lady Susan"]
print(novels)

unfinished = ["The Watsons", "Sanditon"]
novels + unfinished

novels[6]

novels.index("Lady Susan")

pub_year = [1811, 1813, 1814, 1815, 1818, 1818, 1871]
susan_index = novels.index("Lady Susan")
pub_year[susan_index]  # 1871

year_index = pub_year.index(1814)
novels[year_index]
# 'Mansfield Park'

novels[-1]
# 'Lady Susan'
```

```{python}
orwell_novels = ["Animal Farm", "Nineteen Eighty-Four", "Burmese Days", "Keep the Aspidistra Flying", "Coming Up for Air"]
pub_year = [1945, 1949, 1934, 1936, 1939]

orwell_novels[0]
orwell_novels[-1]

pub_year[orwell_novels.index("Burmese Days")]

orwell_novels[pub_year.index(1936)]
```

```{python}
novels[0:3]
# ['Sense and Sensibility', 'Pride and Prejudice', 'Mansfield Park']

"Emma" in novels          # True
"Frankenstein" in novels  # False

novel_to_check = "Lady Susan"
novel_to_check in novels
```

```{python}
complex_list = [["Sense and Sensibility", 1811],
                ["Pride and Prejudice", 1813],
                ["Mansfield Park", 1814],
                ["Emma", 1815]]
complex_list[0]      # ["Sense and Sensibility", 1811]
complex_list[2][1]   # 1814
```

```{python}
novel_dict = {"Sense and Sensibility": 1811,
              "Pride and Prejudice": 1813,
              "Mansfield Park": 1814}
              
austen_dict = {
    "Sense and Sensibility": 1811,
    "Pride and Prejudice": 1813,
    "Mansfield Park": 1814,
    "Emma": 1815,
    "Northanger Abbey": 1818,   # duplicate value
    "Persuasion": 1818,         # duplicate value
    "Lady Susan": 1871
}

austen_dict["Pride and Prejudice"]
# 1813

austen_dict["The Rise of Han Solo"] = 2025

austen_dict["The Rise of Han Solo"] = 1872

del austen_dict["The Rise of Han Solo"]

"Pride and Prejudice" in austen_dict  # True
1811 in austen_dict                   # False
```

```{python}
orwell_dict = {
    "Animal Farm": 1945,
    "Nineteen Eighty-Four": 1949,
    "Burmese Days": 1934,
    "Keep the Aspidistra Flying": 1936,
    "Coming Up for Air": 1939
    }
    
orwell_dict['Animal Farm']

'Homage to Catalonia' in orwell_dict

orwell_dict['Homage to Catalonia'] = 1937

orwell_dict['Homage to Catalonia'] = 1938

del orwell_dict ['Coming Up for Air']

print(orwell_dict)
```

```{python}
x = 50
if x % 2 == 0: print(x, "is even")      # 50 is even

x % 2       # 0
x % 2 == 0  # True 
```

```{python}
if x % 2 == 0: 
    print(x, "is even.") 
    print("This line only prints if it's even too.") 
print("This line prints no matter what.") 
```

```{python}
if x == 51: 
    print(x, "is even.") 
    print("This line only prints if it's even too.") 
print("This line prints no matter what.") 
```

```{python}
if x % 2 == 0: 
    print(x, "is even") 
else: 
    print(x, "is odd") 
```

```{python}
x = 50.1
x % 2
```

```{python}
x = 50
if x % 2 == 0:
    print(x, "is even.")
elif x % 2 == 1:
    print(x, "is odd.")
else:
    print(x, "is a decimal.")
```

```{python}
charlotte = ["The Professor", "Jane Eyre", "Shirley", "Villette"] 
emily = ["Wuthering Heights"] 
anne = ["Agnes Grey", "The Tenant of Wildfell Hall"] 

bronte_checks = {"charlotte": 0, "emily": 0, "anne" : 0}  #a starter dict, where the values of each bronte book is at 0

if novel in charlotte: 
    bronte_checks["charlotte"] = bronte_checks["charlotte"] + 1
    print("Charlotte Brontë wrote", novel) 
elif novel in emily: 
    bronte_checks["emily"] = bronte_checks["emily"] + 1
    print("Emily Brontë wrote", novel) 
elif novel in anne: 
    bronte_checks["anne"] = bronte_checks["anne"] + 1
    print("Anne Brontë wrote", novel) 
else: print(novel, "was not written by one of the Brontë sisters")

print(bronte_checks)
```

```{python}
novel = "Wuthering Heights" 

charlotte = ["The Professor", "Jane Eyre", "Shirley", "Villette"] 
emily = ["Wuthering Heights"] 
anne = ["Agnes Grey", "The Tenant of Wildfell Hall"] 

bronte_checks = {"charlotte": 0, "emily": 0, "anne" : 0} 

if novel in charlotte: 
    bronte_checks["charlotte"] = bronte_checks["charlotte"] + 1
    print("Charlotte Brontë wrote", novel) 
elif novel in emily: 
    bronte_checks["emily"] = bronte_checks["emily"] + 1
    print("Emily Brontë wrote", novel)
elif novel in anne: 
    bronte_checks["anne"] = bronte_checks["anne"] + 1
    print("Anne Brontë wrote", novel) 
else: print(novel, "was not written by one of the Brontë sisters")

print(bronte_checks)
```

```{python}

sound = ('k')

vowels = ["a", "e", "i", "o", "u"]
consonants = ["p", "t", "k", "m", "n", "s", "r", "l"]

if sound in consonants:
    print(sound, "is a consonant")
elif sound in vowels:
    print(sound, "is a vowel")
else: print(sound, "is something else")
```

```{python}
word = "bʌs"

sibilants = ["s", "z", "ʃ", "ʒ", "tʃ", "dʒ"] 
voiceless = ["p", "t", "k", "f", "θ"]

last_letter = word[-1]

if last_letter in sibilants:
    plural = word + "ɪz"
elif last_letter in voiceless:
    plural = word + "s"
else: plural = word + "z"

print(last_letter)
print(plural)
```

```{python}
charlotte = ['The Professor', 'Jane Eyre', 'Shirley', 'Villette']

print(charlotte[0])
print(charlotte[1])
print(charlotte[2])
print(charlotte[3])
#or, if you don't know how many
print(len(charlotte))

for title in charlotte: 
    print(title)
    
for book in charlotte: 
    print(book)
```

```{python}
charlotte = ['The Professor', 'Jane Eyre', 'Shirley', 'Villette']
for book in charlotte: 
    print(book)
print(book)
```

```{python}
words = ["phoneme", "phrase", "morpheme", "reconstruction", "index"]

for term in words:
    print(term, "has", len(term), "letters")
```

```{python}
import os
print(os.getcwd())

import urllib.request

url = "https://www.gutenberg.org/files/141/141-0.txt"  # Mansfield Park
filename = "mansfield_park.txt"

urllib.request.urlretrieve(url, filename)

print("Downloaded:", filename)

with open("mansfield_park.txt", "r", encoding="utf-8") as f:
    book_text = f.read()
    
print(book_text[:200])
```

```{python}
with open("mansfield_park.txt", "r", encoding="utf-8") as f:
    book_lines = f.readlines()

len(book_lines)

book_lines[101]
```

```{python}
one_line = book_lines[101]
one_line.rstrip()
```

```{python}
words = [" Cat\n", "dog", " BIRD ", "fish\n", "LION", "tiger ", "bear", "OWL\n"]

for word in words:
    cleaned = word.strip().lower()
    print(cleaned)
```

```{python}
test_list = ["a", "b", "c"]
test_list.append("d")

print(test_list)
```

```{python}
words = [" Cat\n", "dog", " BIRD ", "fish\n", "LION", "tiger ", "bear", "OWL\n"]
cleaned_words = []

for word in words:
    cleaned = word.strip().lower()
    cleaned_words.append(cleaned)

print(cleaned_words)
```

```{python}
words = [" Cat\n", "dog", " BIRD ", "fish\n", "LION", "tiger ", "bear", "OWL\n"]

cleaned_words = [word.strip().lower() for word in words]

print(cleaned_words)
```

```{python}
items = ["color", "flavour", "theater", "center", "analyze", "organize", "favorite", "neighbor", "honor", "catalog", "honour", "flavor", "analyse", "flavor", "traveler"]
print(len(items))
```

```{python}
items = ["color", "flavour", "theater", "center", "analyze", "organize", "favorite", "neighbor", "honor", "catalog", "honour", "flavor", "analyse", "flavor", "traveler"]

item_count = 0
for item in items:
    item_count += 1
    print(item, item_count)
```

```{python}
items = ["color", "flavour", "theater", "center", "analyze", "organize", "favorite", "neighbor", "honor", "catalog", "honour", "flavor", "analyse", "flavor", "traveler"]

c_item_count = 0
for item in items:
    if item[0] == "c":
        c_item_count += 1
        print(item, c_item_count)
```

```{python}
items = ["color", "flavour", "theater", "center", "analyze", "organize", "favorite", "neighbor", "honor", "catalog", "honour", "flavor", "analyse", "flavor", "traveler"]

r_item_count = 0
for item in items:
    if item[-1] == "r":
        r_item_count += 1
        print(item, r_item_count)
```

```{python}
word = "word"
word[0]
numb = 0

word = "four"
new_word  = word.replace("our", "or")
print(new_word)
```

```{python}
items = ["color", "flavour", "theater", "center", "analyze", "organize", "favorite", "neighbor", "honor", "catalog", "honour", "flavor", "analyse", "flavor", "traveler"]

down_with_brits = []
for word in items:
    if word.endswith("our"):
        word = word.replace("our", "or")
    elif word.endswith("yse"):
        word = word.replace("yse", "yze")
    down_with_brits.append(word)

print(down_with_brits)
```

```{python}
getty = "Four score and seven years ago our fathers brought forth on this continent, a new nation, conceived in Liberty, and dedicated to the proposition that all men are created equal."

getty.split()
```

```{python}
getty = "Four score and seven years ago our fathers brought forth on this continent, a new nation, conceived in Liberty, and dedicated to the proposition that all men are created equal."

getty_1 = getty.split(",")
getty_2 = getty.split(".")
getty_3 = getty.split("e")
print(getty_1, "\n", getty_2, "\n", getty_3)
```

```{python}
import re

text = "Hello, world!   This... is a test."
words = re.split(r"[\s\W]+", text)
words = [w for w in words if w] 
print(words)
# \s = whitespace
# \W = non-word characters (punctuation, symbols, etc.)
# + = one or more preceding
```

```{python}
with open("alice.txt", "r", encoding="utf-8") as f:
    alice_text = f.read()
    
print(alice_text[:100])
```
